{"version":3,"sources":["hooks/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdate","eventDelete","eventLoaded","startLogout","dispatch","clear","logout","checkingFinish","login","user","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setformValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","id","console","log","getState","evento","_id","eventStartAddNew","inputProps","width","background","color","dateFormat","timeFormat","closeOnSelect","closeOnClickOutside","isValidDate","currentDate","required","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","myEventsList","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","backgroundColor","borderRaduis","opacity","display","components","onDoubleClickEvent","onSelectEvent","onView","view","selectable","onSelectSlot","PrivateRoute","isAuth","children","to","PublicRoute","AppRouter","cheking","showLoading","close","path","element","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4989bd55.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\r\n\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n    if (method === 'GET') {\r\n        return fetch(url)\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`\r\n    const token = localStorage.getItem('token') || ''\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\n","export const types = {\r\n\r\n    uiOpenModal: 'ui Open Modal',\r\n    uiCloseModal: 'ui Close Modal',\r\n\r\n    eventLogout: 'calendar Event logout',\r\n    eventStartNew: 'calendar Start add new',\r\n    eventSetActive: 'calendar Set active',\r\n    eventAddNew: 'calendar Add new',\r\n    eventActiveClear: 'calendar Clear Acitve event',\r\n    eventUpdate: 'calendar Event Update',\r\n    eventDelete: 'calendar Event Delete',\r\n    eventLoaded: 'calendar Event loaded',\r\n\r\n    authChekingFinish: 'auth Finish Cheking login state',\r\n    authStartLogin: 'auth Start login',\r\n    authLogin: 'auth login',\r\n    authStartRegister: 'auth Start register',\r\n    authStartTokenRenew: 'auth Start token renew',\r\n    authLogout: 'auth Logout',\r\n\r\n}","import moment from \"moment\"\r\n\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map((e) => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }))\r\n}","import Swal from \"sweetalert2\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\"\r\nimport { fetchConToken } from \"../hooks/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST')\r\n            const body = await resp.json()\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventActiveClear\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdate(event))\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDelete())\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst eventDelete = () => ({\r\n    type: types.eventDelete,\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events')\r\n            const body = await resp.json()\r\n            const events = prepareEvents(body.eventos)\r\n            dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\n\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../hooks/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from './events'\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew')\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-init-date', new Date().getTime())\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear()\r\n        dispatch(logout());\r\n        dispatch(eventLogout())\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authChekingFinish\r\n})\r\n\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout,\r\n})\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'camiloignaval@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Jael',\r\n        rEmail: 'Jael@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        dispatch(startLogin(lEmail, lPassword))\r\n\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n        if (rPassword1 !== rPassword2) {\r\n            Swal.fire('Error', 'Contraseñas deben ser iguales', 'error')\r\n        } else {\r\n            dispatch(startRegister(rEmail, rPassword1, rName))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='rPassword1'\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name='rPassword2'\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch()\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'> {name}</span>\r\n\r\n            <button className='btn btn-outline-danger' onClick={handleLogout}>\r\n                <i className='fas fa-sign-out-alt' />\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <br />\r\n            <strong>{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DatePicker from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    }\r\n}\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n\r\n    const [formValues, setformValues] = useState(initEvent)\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        activeEvent ? setformValues(activeEvent) : setformValues(initEvent)\r\n\r\n    }, [activeEvent])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setformValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal())\r\n        dispatch(eventClearActiveEvent())\r\n        setformValues(initEvent)\r\n    }\r\n\r\n\r\n    const handleStartDateChange = (e) => {\r\n\r\n        setDateStart(e.toDate());\r\n        setformValues({\r\n            ...formValues,\r\n            start: e.toDate()\r\n        })\r\n    };\r\n\r\n    const handleEndtDateChange = (e) => {\r\n        setDateEnd(e.toDate());\r\n        setformValues({\r\n            ...formValues,\r\n            end: e.toDate()\r\n        })\r\n    };\r\n\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la de inicio', 'error')\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues))\r\n        }\r\n\r\n        closeModal()\r\n\r\n    }\r\n    // const yesterday = moment(dateStart).subtract(1, 'day')\r\n    // const valid = (current) => {\r\n    //     return current.isAfter(yesterday);\r\n    // };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n\r\n            {\r\n                activeEvent ? <h1> Editar evento</h1> : <h1> Nuevo evento </h1>\r\n            }\r\n            <hr />\r\n            <form className=\"container\"\r\n                onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DatePicker\r\n                        inputProps={{\r\n                            style: { width: 250, background: 'white', color: 'black' }\r\n                        }}\r\n                        value={dateStart}\r\n                        onChange={handleStartDateChange}\r\n                        dateFormat=\"DD-MM-YYYY\"\r\n                        timeFormat=\"hh:mm A\"\r\n                        closeOnSelect={true}\r\n                        closeOnClickOutside={closeModal}\r\n\r\n\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DatePicker\r\n                        inputProps={{\r\n                            style: { width: 250, background: 'white', color: 'black' }\r\n                        }}\r\n                        value={dateEnd}\r\n                        onChange={handleEndtDateChange}\r\n                        dateFormat=\"DD-MM-YYYY\"\r\n                        timeFormat=\"hh:mm A\"\r\n                        closeOnSelect={true}\r\n                        closeOnClickOutside={true}\r\n                        isValidDate={\r\n                            (currentDate) => {\r\n                                return (currentDate >= dateStart)\r\n                            }\r\n                        }\r\n\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        required\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        required\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                    <button className=\"btn btn-outline-primary\" type=\"submit\">  <i className=\"far fa-save\"></i>  <span> Guardar</span></button>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onClick = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className='btn btn-primary fab'\r\n                onClick={onClick}>\r\n                <i className='fas fa-plus' />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        dispatch(eventStartDelete())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className='btn btn-danger fabDelete'\r\n                onClick={onClick}>\r\n                <i className='fas fa-trash-alt' /> <b>Eliminar evento</b>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { messages } from '../../helpers/calendar-messages'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es')\r\nconst localizer = momentLocalizer(moment)\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const { events: myEventsList, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const eventStyleGetter = (event) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRaduis: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent())\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={myEventsList}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                selectable={true}\r\n                onSelectSlot={onSelectSlot}\r\n            />\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n\r\n            }\r\n            <AddNewFab />\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { Navigate } from \"react-router\";\r\n\r\nexport const PrivateRoute = ({ isAuth, children }) => {\r\n    return isAuth ? children : <Navigate to=\"/login\" />;\r\n\r\n\r\n\r\n}","import { Navigate } from \"react-router\";\r\n\r\nexport const PublicRoute = ({ isAuth, children }) => {\r\n    return !isAuth ? children : <Navigate to=\"/\" />;\r\n\r\n\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n    Navigate\r\n} from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\nimport { startCheking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(startCheking());\r\n    }, [dispatch])\r\n\r\n    const { cheking, uid } = useSelector(state => state.auth)\r\n\r\n    cheking ? Swal.showLoading() : Swal.close()\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route path=\"/\" element={\r\n                    <PrivateRoute isAuth={!!uid}>\r\n                        <CalendarScreen />\r\n                    </PrivateRoute>} />\r\n                <Route path=\"/login\" element={\r\n                    <PublicRoute isAuth={!!uid}>\r\n                        <LoginScreen />\r\n                    </PublicRoute>\r\n                } />\r\n\r\n                <Route path='*' element={<Navigate to='/' />} />\r\n\r\n            </Routes>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    cheking: true,\r\n    // uid:null,\r\n    // name:null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                cheking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authChekingFinish:\r\n            return {\r\n                ...state,\r\n                cheking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                cheking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: bbdd,\r\n//     title: 'Cumpleaños jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar la torta',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Camilo'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((e) => (e.id === action.payload.id) ? action.payload : e)\r\n            }\r\n        case types.eventActiveClear:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...action.payload\r\n                ]\r\n\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducers';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n\r\n)\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n  <>\n    <CalendarApp />\n  </>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}